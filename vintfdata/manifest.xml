<manifest version="1.0" type="framework">
    <hal format="hidl" max-level="8">
        <name>android.hidl.memory</name>
        <transport arch="32+64">passthrough</transport>
        <version>1.0</version>
        <interface>
            <name>IMapper</name>
            <instance>ashmem</instance>
        </interface>
    </hal>
    <hal format="hidl" max-level="6">
        <name>android.frameworks.displayservice</name>
        <transport>hwbinder</transport>
        <version>1.0</version>
        <interface>
            <name>IDisplayService</name>
            <instance>default</instance>
        </interface>
    </hal>
    <!--
        Instead of calling this, prefer to set priority in init .rc files via
        `ioprio <class> <priority>`. For more information, see
        system/core/init/README.md
    -->
    <hal format="hidl" max-level="5">
        <name>android.frameworks.schedulerservice</name>
        <transport>hwbinder</transport>
        <version>1.0</version>
        <interface>
            <name>ISchedulingPolicyService</name>
            <instance>default</instance>
        </interface>
    </hal>
    <hal format="aidl">
        <name>android.frameworks.sensorservice</name>
        <version>1</version>
        <fqname>ISensorManager/default</fqname>
    </hal>
    <hal format="hidl" max-level="8">
        <name>android.frameworks.sensorservice</name>
        <transport>hwbinder</transport>
        <version>1.0</version>
        <interface>
            <name>ISensorManager</name>
            <instance>default</instance>
        </interface>
    </hal>
    <hal format="hidl" max-level="7">
        <name>android.system.net.netd</name>
        <transport>hwbinder</transport>
        <version>1.1</version>
        <interface>
            <name>INetd</name>
            <instance>default</instance>
        </interface>
    </hal>
    <hal format="hidl" max-level="7">
        <name>android.system.wifi.keystore</name>
        <transport>hwbinder</transport>
        <version>1.0</version>
        <interface>
            <name>IKeystore</name>
            <instance>default</instance>
        </interface>
    </hal>
    <hal format="native">
        <name>netutils-wrapper</name>
        <!--
            netutils-wrapper versions must be x.0.
            netutils-wrapper next version has less functionalities than
            previous versions, so unlike a HAL, netutils-wrapper are not
            backwards compatible. Hence the major version must be bumped for
            each update.
            If a minor version were bumped instead (say, <version>1.1</version>),
            it would be incorrectly considered compatible with version 1.0 in
            device compatibility matrix.
        -->
        <version>1.0</version>
    </hal>
</manifest>
